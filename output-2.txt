Radical! You rock John! We use a persistent session and rotate a token every XX minutes. If somebody comes to the site using an invalidated session / token combo all records are cleared and the user is logged out. @Kev @Rich B: Please end these rollback wars Locked - not helpful I do not wish to diminish the importance of good index coverage. There are times that queries using NOLOCK can add additional performance on top of gains realized by indexes on tables with a high number of inserts / updates. Query speed on Stack Overflow is paramount even at the cost of inaccurate or missing data. @DaveHanson we have lowered the rep requirements for self answering - please try answering again Did this work? I would like to know. How do you expose a LINQ query as an ASMX web service? Usually, from the business tier, I can return a typed DataSet or DataTable which can be serialized for transport over ASMX.How can I do the same for a LINQ query? Is there a way to populate a typed DataSet or DataTable via a LINQ query?public static MyDataTable CallMySproc(){ string conn = "..."; MyDatabaseDataContext db = new MyDatabaseDataContext(conn); MyDataTable dt = new MyDataTable(); // execute a sproc via LINQ var query = from dr in db.MySproc().AsEnumerable select dr; // copy LINQ query resultset into a DataTable -this does not work ! dt = query.CopyToDataTable(); return dt;}How can I get the result set of a LINQ query into a DataSet or DataTable? Alternatively, is the LINQ query serializeable so that I can expose it as an ASMX web service? How do I store binary data in MySQL? For instance, my query is like the following using SQL Server 2005:SELECT * FROM Table WHERE FREETEXT(SearchField, 'c#') I have a full text index defined to use the column SearchField which returns results when using:SELECT * FROM Table WHERE SearchField LIKE '%c#%'I believe # is a special letter, so how do I allow FREETEXT to work correctly for the query above? According to MSDN:http://msdn.microsoft.com/en-us/library/ms191242.aspx When either the READ COMMITTED SNAPSHOT or ALLOW SNAPSHOT ISOLATION database options are ON, logical copies (versions) are maintained for all data modifications performed in the database. Every time a row is modified by a specific transaction, the instance of the Database Engine stores a version of the previously committed image of the row in tempdb. Each version is marked with the transaction sequence number of the transaction that made the change. The versions of modified rows are chained using a link list. The newest row value is always stored in the current database and chained to the versioned rows stored in tempdb. For short-running transactions, a version of a modified row may get cached in the buffer pool without getting written into the disk files of the tempdb database. If the need for the versioned row is short-lived, it will simply get dropped from the buffer pool and may not necessarily incur I/O overhead.There appears to be a slight performance penalty for the extra overhead, but it may be negligible. We should test to make sure.Try setting this option and REMOVE all NOLOCKs from code queries unless itâ€™s really necessary. NOLOCKs or using global methods in the database context handler to combat database transaction isolation levels are Band-Aids to the problem. NOLOCKS will mask fundamental issues with our data layer and possibly lead to selecting unreliable data, where automatic select / update row versioning appears to be the solution.ALTER Database [StackOverflow.Beta] SET READ_COMMITTED_SNAPSHOT ON I have a client who is in need of a file based encryption / decryption application to be used between Linux / Windows 2003 Server. The goal is to have a single file compressed nightly on a linux platform and secured using a script, transmitted over FTP, decrypted on the Windows 2003 server and available for other import routines such as SSIS, etc. The file can remain unencrypted on each end after transport, the desire is mainly to keep the file secure during transport. Firewall rules and the fact that IIS6 doesn't support SFTP eliminate SFTP as an option. Simplicity is the primary focus here, so complex security options or heavyweight libraries cannot be used. A SPAN tag is not intended to be a container for other tags. This is especially useful when combined with classes.Use divs for defining sections of a page, and spans to enclose and style text or classes of text. http://www.learnwebdesignonline.com/htmlcourse/span-div.htm shows a good example of how they are used. For your example of wrapping text, float the image and wrap it all in a DIV - like so:&lt;div&gt;test test test test &lt;img src="" alt="" style="float:left;margin:8px 0 0 8px; display:inline" /&gt; test test test test test test test test test test test test &lt;/div&gt; Prior to working on Stack Overflow, I was against NOLOCK on the principal that you could potentially perform a SELECT with NOLOCK and get back results with data that may be out of date or inconsistent. A factor to think about is how many records may be inserted/updated at the same time another process may be selecting data from the same table. If this happens a lot then there's a high probability of deadlocks unless you use a database mode such as READ COMMITED SNAPSHOT.I have since changed my perspective on the use of NOLOCK after witnessing how it can improve SELECT performance as well as eliminate deadlocks on a massively loaded SQL Server. There are times that you may not care that your data isn't exactly 100% committed and you need results back quickly even though they may be out of date. Ask yourself a question when thinking of using NOLOCK: Does my query include a table that has a high number of INSERT/UPDATE commands and do I care if the data returned from a query may be missing these changes at a given moment?If the answer is no, then use NOLOCK to improve performance.I just performed a quick search for the NOLOCK keyword within the code base for Stack Overflow and found 138 instances, so we use it in quite a few places. Recently we've been looking at a few exceptions captured in our Stack Overflow logs and have discovered an issue for Safari users.I noticed this HTTP header in one of the exceptions we have captured:HTTP_X_PURPOSE previewDoes anyone know what action triggers this header or the meaning of HTTP_X_PURPOSE?  I have read up on two legged OAuth and understand the principals behind it - my question is specific to the DotNetOpenAuth library. Is there sample code or supporting documentation on how to use DotNetOpenAuth via two legged authentication? Three legged appears to be supported quite well and since two legged is simply a reduction in the number of steps I would assume this would be easy - so far, this isn't the case. I came upon an interesting discussion with my team around the use of HttpRequest.UrlReferrer and wanted to solicit feedback from the community. According to the W3C spec: The Referer[sic] request-header field allows the client to specify, for the server's benefit, the address (URI) of the resource from which the Request-URI was obtained (the "referrer", although the header field is misspelled.) The Referer request-header allows a server to generate lists of back-links to resources for interest, logging, optimized caching, etc. It also allows obsolete or mistyped links to be traced for maintenance. The Referer field MUST NOT be sent if the Request-URI was obtained from a source that does not have its own URI, such as input from the user keyboard.as input from the user keyboard.The Request.UrlReferrer object does the work of converting referral strings that contain well formed URIs to an object with properties on every request. According to our logs there are requests that come in that contain invalid data in the referral such as:localhostapp:/BeamBackTest.swfapp:/multtiple.swfapp:/AFriendFeed.swfALToolBarapp:/index.htmlmhtml:file://C:\Documents+and+Settings\User\Desktop\oracle\What+is+a+View+in+Oracle+-+Stack+Overflow.mhtUsing Request.UrlReferrer would mean the above cases would be NULL. Is it better to discard the invalid data based on the W3C spec by using Request.UrlReferrer or preserve it by using Request.ServerVariables["HTTP_REFERER"] even though the data may be interesting, but potentially useless.  The correct syntax for properties in ccnet config is $[CCNetProject]        