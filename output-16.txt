@Illep I believe this is related to a wrong compiler directive in MKNetworkKit. I'm going to double check it and create a new issue if that's the case, but for now, if you're compiling only for iOS, remove the files "NSAlert+MKNetworkKitAdditions.*" from your project and it should work. @Illep in the demo app, just slide your finger through the black bar and it will log you off. But that's just a demo of how to implement it, you can do it however you want :) I had the exact same problem, and your solution also worked for me. I wish I could upvote this answer more than once. Thanks a lot! Warning: this method works fine for portrait, but not for landscape videos. If you wanna rotate a landscape video (using either `rotationConstant` 0 or 2) you need to swap `width` and `height` in `bytesPerRowOut`, `outbuff` and `CVPixelBufferCreateWithBytes`. are you sure the sample buffers that come from the capture session are already AAC encoded? I see that you're setting a AVAssetWriterInput with compression settings, but it doesn't seem to be connected to anything... As far as I can tell, the audio output will just provide uncompressed audio samples to the delegate, no? This code doesn't work if you change `videoOrientation` in the `AVCaptureConnection`. Check [this answer](http://stackoverflow.com/a/31553521/16) for more info. I currently have a daily process that loads a large amount of data from a TXT file into a ORACLE database, using a shell script that calls sql_loader. I want to migrate that to a .NET service, but don't want to rely on executing sql_loader from my service.What is the best (and fastest) way to accomplish that? If you just want your user to be able to edit a source file inside your app, I'd recommend using a text edit control with syntax highlighting instead of embedding Visual Studio in your project. One option is ICSharpCode.TextEditor.You can find more info about it in this CodeProject article. You can use a SMTP development server, like Neptune or Antix. Both work the same way: they create a "fake" SMTP server in your machine so you can test your e-mail sending methods, without actually sending the messages they receive. I actually solved my own problem using an alternative method: I wrote a stored procedure to load the data and used the UTL_FILE package. I don't know if this is the fastest method, but it is quite fast and very flexible (I can manipulate the text data as I wish, while loading).Thanks for all the replies, I just posted this to show one more alternative for people having the same problem I had. You can use the "Tag" property. Its type is "object" so you can use any object you want, but in your case a string will do: If Button1.Tag = "Pause" Then Button1.Image = Image.FromFile("iconPlay.png") Button1.Tag = "Play" Else Button1.Image = Image.FromFile("iconPause.png") Button1.Tag = "Pause" End If You appear to be using two tables named "Students". One in DB1 and one in DB2. You are referencing DB1..Students in your WHERE clause, but not in your FROM clause.  I don't know if this is just a part of a bigger procedure or something, the markup in your question is kinda confusing.Anyway, what I was able to notice is that you forgot a semicolon (;) at the end of your first SELECT. It should be:SELECT COUNT(*) INTO iCountFROM TEMP_ALL; I'm the author of the post you linked from here.The reason you're getting this error is because you're using the wrong version of OAuthConsumer. There are several versions available, and most of them don't have the "verifier" field in OAToken and will return the error you're seeing if you try to use it. The sample project from my post contains the correct OAuthVerifier version, that's why it works.I updated my post with a ZIP file containing only OAuthConsumer. You can use that one in your project and it will work. Of course, you can also copy only the OAuthConsumer files from my sample project and use in yours, it'll also work. I hope is not considered bad etiquette to recommend my own project, but I believe it's relevant to this question, so...I just published a new OAuth library to GitHub that's fully ARC compatible. It comes with a working demo that implements the whole Twitter OAuth flow and allows you to post a tweet. You can find it here: RSOAuthEngine. AFAIK, the only way to do that is to post to '/me/links' (instead of '/me/feed') and set the 'link' to 'http://www.facebook.com/photo.php?fbid=&lt;id_of_the_photo&gt;'. That will effectively share the photo in the user's feed, showing a bigger picture. You can add a personal message (using the 'message' field) but I don't think it's possible to geotag a shared photo.Posting to '/me/feed' with 'type: photo' only works if the user is the owner of the photo (in that case, set 'object_id' to the photo id). In JSON, { } represents an object (key/value pairs) and [ ] represents an array. Judging by the sample you provided, here's what your server expects:Top Object: dictionary with two keys: TypeProperties and ImageUrls.TypeProperties and ImageUrls: each is an array containing one or more objects with two keys: Key and Value. Each key should have its respective value.To comply with what your server expects, you need a structure similar to this (note this is just a bare example, written directly here, but should point you in the right direction):NSDictionary *object = [NSDictionary dictionaryWithObjectsAndKeys: @"prop 0", @"Key", @"blah 0", @"Value", nil];NSArray *typeProperties = [NSArray arrayWithObjects: object, // Add as many similar objects as you want nil];NSArray *imageUrls = [NSArray arrayWithObjects: object, // Add as many similar objects as you want nil];Then, in your proxyForJson method, you can use:- (NSDictionary*) proxyForJson{ return [NSDictionary dictionaryWithObjectsAndKeys: typeProperties, @"TypeProperties", imageUrls, @"ImageUrls", nil];} Most implementations I found (including the previous answer here) won't work if you change videoOrientation in the AVCaptureConnection (for some reason I don't fully understand, the CVPlanarPixelBufferInfo_YCbCrBiPlanar struct will be empty in that case), so I wrote one that does (most of the code was based on this answer). My implementation also adds an empty alpha channel to the RGB buffer and creates the CGBitmapContext using the kCGImageAlphaNoneSkipLast flag (there's no alpha data, but iOS seems to require 4 bytes per pixel). Here it is:#define clamp(a) (a&gt;255?255:(a&lt;0?0:a))- (UIImage *)imageFromSampleBuffer:(CMSampleBufferRef)sampleBuffer { CVImageBufferRef imageBuffer = CMSampleBufferGetImageBuffer(sampleBuffer); CVPixelBufferLockBaseAddress(imageBuffer,0); size_t width = CVPixelBufferGetWidth(imageBuffer); size_t height = CVPixelBufferGetHeight(imageBuffer); uint8_t *yBuffer = CVPixelBufferGetBaseAddressOfPlane(imageBuffer, 0); size_t yPitch = CVPixelBufferGetBytesPerRowOfPlane(imageBuffer, 0); uint8_t *cbCrBuffer = CVPixelBufferGetBaseAddressOfPlane(imageBuffer, 1); size_t cbCrPitch = CVPixelBufferGetBytesPerRowOfPlane(imageBuffer, 1); int bytesPerPixel = 4; uint8_t *rgbBuffer = malloc(width * height * bytesPerPixel); for(int y = 0; y &lt; height; y++) { uint8_t *rgbBufferLine = &amp;rgbBuffer[y * width * bytesPerPixel]; uint8_t *yBufferLine = &amp;yBuffer[y * yPitch]; uint8_t *cbCrBufferLine = &amp;cbCrBuffer[(y &gt;&gt; 1) * cbCrPitch]; for(int x = 0; x &lt; width; x++) { int16_t y = yBufferLine[x]; int16_t cb = cbCrBufferLine[x &amp; ~1] - 128; int16_t cr = cbCrBufferLine[x | 1] - 128; uint8_t *rgbOutput = &amp;rgbBufferLine[x*bytesPerPixel]; int16_t r = (int16_t)roundf( y + cr * 1.4 ); int16_t g = (int16_t)roundf( y + cb * -0.343 + cr * -0.711 ); int16_t b = (int16_t)roundf( y + cb * 1.765); rgbOutput[0] = 0xff; rgbOutput[1] = clamp(b); rgbOutput[2] = clamp(g); rgbOutput[3] = clamp(r); } } CGColorSpaceRef colorSpace = CGColorSpaceCreateDeviceRGB(); CGContextRef context = CGBitmapContextCreate(rgbBuffer, width, height, 8, width * bytesPerPixel, colorSpace, kCGBitmapByteOrder32Little | kCGImageAlphaNoneSkipLast); CGImageRef quartzImage = CGBitmapContextCreateImage(context); UIImage *image = [UIImage imageWithCGImage:quartzImage]; CGContextRelease(context); CGColorSpaceRelease(colorSpace); CGImageRelease(quartzImage); free(rgbBuffer); CVPixelBufferUnlockBaseAddress(imageBuffer, 0); return image;}  