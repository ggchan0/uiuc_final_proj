Don't use innerHTML. It's not a w3c recommendation and behaves inconsistently. It's considered bad style. @Nick,No Freudian slip - the code was 'hacked' together for prototyping and demonstrating eventual functionality. I'd never release hacked code into a production environment =).Professionally, I write OO code all day so _not_ coding in OO feels almost unnatural - that's why I wanted feedback. Additionally, this is better practice because it's keeping the behavior logic out of the presentation logic. If it's not HTML, then it doesn't belong in a .html file. @IsaacYou're absolutely right - I mis-read the question. My fault on that. Whenever an event is fired, 'this' refers to the object that invoked the event. @Luka For a while, I was using a wiki to keep personal notes, snippets, etc. for things I was doing at work; however, I ended up moving to Google Docs to do that. Nonetheless, I find that having something like this is really useful! You could append this function to the onchange event of the text area and it would update it on the fly, though it would be a little bit slow. CSS is the way to go IMHO. @Stephen - That's a really good question! I created a small page to test this out and it appears that CSS only changes the way that it appears _not_ the underlying ASCII. @eyelidlessness - I could be misunderstanding your question, but the ternary operator above makes sure that you get a reference to an existing object so evt.preventDefault() will work across the major browsers. At any rate, it will cancel the event without stopping propagation of the event. I really like this idea - thanks for sharing! @Steve - yeah, that was a typo out of habit - I usually use divs for buttons. thanks for the catch ;) Normally for Ajax and style issues. Use a div, JavaScript event handler, CSS styling, and then gracefully fall back to a standard input button if JavaScript is disabled. is this a client-side method or a server-side method? I think that if you're going to be doing a lot of DOM manipulation, then I'd definitely roll with one of those. Each library smooths over inconsistencies across browsers so you don't have to worry about it. What kind of things are you planning to need to do using JavaScript? I was just doing that for a concise example, not to really demonstrate how I'm using in real practice. @John Rudy - Find the beginning of a With statement and set a breakpoint. Step to the next line (so you're hiding the first line right under the if block). Highlight it, then 'Add Watch'. You should see this: 'With' contexts and statements are not valid in debug windows. I'm not sure I understand your question. I can't seem to reproduce the behavior you are describing. Could you please revise your question? Compile Time is synonymous for one of two things: (1) catch up on my RSS reader, (2) browse SO =) I think that your question needs some clarification: Are you looking to create a cache in memory of typically used resources from the database, or are you looking for how to dynamically create pages from information in a database? Animals! The quintessential OOP example. Takes me back to some of my earliest programming classes =) Yeah, I don't disagree with you. I just don't know of any other options that simply use HTML/CSS and work across all A-browsers. JavaScript is my ideal solution, as well - it'd be a really simple iteration. joshjdevl mentioned only HTML/CSS. I was trying to stay true to the question. But..but..but..they do it movies all the time! I disagree with the idea that you should start with jQuery. You're starting at too high level of an abstraction and will get a false sense of JavaScript. Learn JavaScript, then learn jQuery. Thanks for the heads up - edited my initial example of a closure. Also, I like your discussion of the circular references on oRequest. I typically don't write my production-level code like this, but this seemed to be a quick example for purposes of this question. I'm experiencing the EXACT same problem with the most recent version of jQuery. Please keep this question updated based on any feedback that you get. @Simon - I submitted a ticket this afternoon about this problem. Ah, the joys of free software ;) They'll get it fixed soon enough, I'm sure - good devs on the team - but it sucks for me because I can't revert back to 1.2.6 =T Thanks a lot, John. This is awesome. Yeah, I had considered the automated log-parsing route, but I like being able to have the information tabled in a database. Thanks for the PHP suggestion, though - I may end up going this route. Can you please improve your question? What do you mean by freeze up? Can you not click to place focus into it? Can you tab into the input box? Does it freeze immediately, or only after you've typed for a while? What operating system are you using? Could you post your HTML? "Tastes good to search bots." Love it. Alright, cool. I updated the above code to include browser detection so that it will apply the dynamic style addition properly. Ha, oops. I left that in there when testing this. Removing it from this answer. Could you please me more specific? Do you want a label added in each quadrant, at the intersection of the markers, below/above the x-axis marker, on either side of the y-axis marker, or completely off the the side/bottom/top of the chart? @nemo Try it and see. It works fine. The appendChild() function removes the option from it's current parent and moves it to that which is specified; otherwise, you'd be duplicating the node in the DOM. @nemo Not a problem! In my opinion, it's always nice to know *how* something works instead of just *that* it works. Thanks a lot - this ended up putting me on the right track. The client returns an XmlDocument, so I used XDocument.Parse() on the OuterXml string of the returned XmlDocument. @JP - thanks for the link. Glad to have this as a reference as it helps to explain the clashing that I was experiencing. Upvoted for #3! It's hard to say without seeing some code. Did you attempt to move the link to the bottom of the page using CSS, or did you alter the markup? It'd be easiest if you have contorl of the markup. You could create a container (like a div), assign it classname (like "event"), and then leverage jQuery's selector power to iterate through the events (think of something like $('div.event').each(function() { // grab the title, date, location, and build up a string here }); What environment are you using? Sprockets helps out with this (http://getsprockets.org/). I miss  Is this "list of elements" a true list (as in a list box) or is it a long list of something like div elements? I don't think you need to explicitly state array1 = null. If you just update the reference, the garbage collector should recognize an instance that has no references pointing to it. Where is this code included in your page - the footer, the header, or an external file? Could you post the code that's being used to dynamically generate the anchors? I ended up needing to specify the Content-Type as rss+xml in the PHP script. $.get() ended up working just fine after that. Yep, you're right and I'm not necessarily advocating doing that either (hence the whole: "if you're looking to reach the biggest audience possible, then it's best to support all major A-grade browsers") but knowing the audience for your platform is important. If your host is running PHP on some variant of Linux, then you should be set. Depends on what kind of data you want to pull back - if the API provides responses in XML or JSON, those are options, too. Basically, you just make a request to the HiveMinder API on the server-side and pass along any values necessary to tell it in what format you want their response. From there, you just parse it. That worked, but ended up revealing another issue with ActiveSupport. Updating the question. Can you clarify your question? Are you asking how to trigger server-side code using jQuery or are you asking how to stub out the function above? @Yarin - There are a couple of options to verify that the stylesheet is loaded, but you could always examine the existing link elements checking their href properties. I'll update my answer. Ah, true. Should I change up my answer? :) @CKK999 you can't get server-side information on the client without actually running the request on the server-side. @Fred Mars you can easily stop propagation within event handlers in jQuery. In the functions, such specify the e argument and then call e.preventDefault(). I've updated my answer just as an example. I cleaned up your code a bit. To second @Sime, you may want to revisit your code. @Dan Right now, I'm just trying to run a single test '> ruby test/unit/user_test.rb' Thanks for the detailed answer. Everything that you've outlined here is in place with the exception of specifying the print out at the top of environment.rb - it actually doesn't print. I *am* running tests using '> ruby test/unit/user_test.rb' as that's how I've always been running tests (since the early versions of Rails). Is Rake the preferred way even for single files? Running on Windows and all gems are typical with a Rails 3 installation. Haven't added any additional testing tools. See this question: http://stackoverflow.com/questions/1778658/polling-the-server-with-ajax @Charles Gotcha - I see what you mean. Unfortunately, nothing comes to mind. Admittedly, I'm not sure what you're looking to do once you get the information but one trick might be to browse the site with JavaScript disabled just to see how it degrades. That may help give a clue as to what's happening in the usual rendering of the site. Only a guess though. Unfortunately, rake test:units is still resulting in a stack trace. The first line contains: test/unit/user_test.rb:3:in `': uninitialized constant Object::ActiveSupport (NameError) I updated my comment on @Dan's answer. When I attempt to run ruby -Itest, I still receive the uninitialized constant exception for ActiveSupport. No autotest.gemspec files were located in /specifications. The only file similar to that is .old.rake.gemspec. The problem ended up being a minor oversight in my part. The test_helper.rb file was botched such that the second line (with the File.expand_path call) did not include the proper path to environment. Updating that path fixed it. @Austin Thanks for the heads up. This had me go back through @Ryan's answer and I traced the issue to the test_helper. Hey @Jatin - I appreciate the answer but check boxes aren't an option for this specific project. Worked great - thanks! 1 I'm fine using an array - didn't mean to imply I was strongly pursuing the use of a hash. But thanks for this :). You're not using append properly - it isn't meant to add a line of markup to the existing page, it's meant to append full nodes to the existing DOM. For example, $('#tab-dock').append(''); Refactor your code and see if that helps! Can you include your routes.rb in the question? Does it also return false if you use x === "2" ? This is correct except the div's with the side .sidebar classname would need to be in another container (something like sidebar-container) and then you'd say #sidebar-container:last-child. @thirtydot cool stuff - thanks for clarifying :) This question really belongs on http://wordpress.stackexchange.com/ Exactly what I needed - thanks! The previous answer is fine, but I'm one of those guys that's firmly against mixing behavior with presentation (putting JavaScript in my HTML) so I prefer to put my event handling logic in my JavaScript files. Additionally, not all browsers implement event (or e) the same way. You may want to do a check prior to running any logic:document.onkeydown = TabExample;function TabExample(evt) { var evt = (evt) ? evt : ((event) ? event : null); var tabKey = 9; if(evt.keyCode == tabKey) { // do work }} Though I believe in striving for valid XHTML and CSS, it's often hard to do for a number of reasons.First, some of the content could be loaded via AJAX. Sometimes, fragments are not properly inserted into the existing DOM.The HTML that you are viewing may not have all been produced in the same document. For example, the page could be made of up components, or templates, and then thrown together right before the browser renders it. This isn't an excuse, but you can't assume that the HTML you're seeing was hand coded all at once.What if some of the code generated by Markdown is invalid? You can't blame Stack Overflow for not producing valid code.Lastly, the purpose of the DOCTYPE is not to simply say "Hey, I'm using valid code" but it's also to give the browser a heads up what you're trying to do so that it can at least come close to correctly parsing that information.I don't think that most developers specify a DOCTYPE and then explicitly fail to adhere to it. Off the top of my head, I would think that you'd need to maintain some form of a data structure in the JavaScript that reflects the items in the current dropdown list. You'd also need a reference to the currently active/selected item. Each time keyup or keydown is fired, update the reference to the active/selected item in the data structure. To provide highlighting information on the UI, add or remove a class name that is styled via CSS based on if the item is active/selected or not.Also, this isn't a biggy, but innerHTML is not really standard (look into createTextNode(), createElement(), and appendChild() for standard ways of creating data). You may also want to see about attaching event handlers in the JavaScript rather than doing so in an HTML attribute. I'm not a fan of partial classes - I try to develop my classes such that each class has a very clear, single issue for which it's responsible. To that end, I don't believe that something with a clear responsibility should be split across multiple files. That's why I don't like partial classes.With that said, I'm on the fence about regions. For the most part, I don't use them; however, I work with code every day that includes regions - some people go really heavy on them (folding up private methods into a region and then each method folded into its own region), and some people go light on them (folding up enums, folding up attributes, etc). My general rule of thumb, as of now, is that I only put code in regions if (a) the data is likely to remain static or will not be touched very often (like enums), or (b) if there are methods that are implemented out of necessity because of subclassing or abstract method implementation, but, again, won't be touched very often. @Grant is right.I'm on a team with close to 100 other developers, and our config files are not checked into source control. We have versions of the files in the repository that are pulled with each check out but they don't change.It's worked out pretty well for us. Similar to abyx, in the team I am on developers always use unit testing and code reviews. In addition to that, I also aim to make sure that I don't incorporate code that people may use - I tend to write code only for the basic set of methods required for the object at hand to function as has been spec'd out. I've found that incorporating methods that may never be used, but provide functionality can unintentionally introduce a "backdoor" or unintended/unanticipated use into the system.It's much easier to go back later and introduce methods, attributes, and properties for which are asked versus anticipating something that may never come. I've used this library for a couple of personal projects. It's pretty good, though I have had to make my own modifications to it a couple of times - nothing major, though, and it's easy enough to do so.I'm sure you already do this, but also validate all of your information on the server-side, as well. Client-side-only validation is rarely, if ever, a good idea.  I'm currently working on a JavaScript tool that, during the course of its execution, will ultimately traverse each node in the DOM. Because this has potential to be a very expensive task, I'd like to benchmark the performance of this script.What's the best, free tool for benchmarking a script such as this across the major browsers? Ideally, I'd like the tool (or set of tools, even):**To generate some form of report based on the results of the test.** It can be as simple as a table showing execution times, or as complex as generating some form of a chart. Either way is fine.**To be free.** it's not that I don't believe in paying for software, it's just that I don't have a major need for a tool like this in my typical day-to-day tasks.If possible, I'd also like the tool to generate varying levels of complex pages so that I can stress test a set of DOMs. This isn't a necessity - if I need to do so, I can write one myself; however, I'd figure I'd poll the community first to see if something already exists. Similar to what pkaeding said, it's hard to guess the problem without seeing your markup and script; however, I'd venture to say that you're not properly stopping the event propagation and/or you're not properly hiding the existing element. I don't know if you're using a framework or not, but here's a possible solution using Prototype:// maintain a reference to the active div bubblethis.oActiveDivBubble = null;// event handler for the first div$('exampleDiv1').observe('mouseover', function(evt) { evt.stop(); if(this.oActiveDivBubble ) { this.oActiveDivBubble .hide(); } this.oActiveDivBubble = $('exampleDiv1Bubble'); this.oActiveDivBubble .show();}.bind(this));// event handler for the second div$('exampleDiv2').observe('mouseover'), function(evt) { evt.stop(); if(this.oActiveDivBubble) { this.oActiveDivBubble.hide(); } this.oActiveDivBubble = $('exampleDiv2Bubble'); this.oActiveDivBubble .show();}.bind(this));Of course, this could be generalized further by getting all of the elements with, say, the same class, iterating through them, and applying the same event handling function to each of them.Either way, hopefully this helps. I'm currently building a small web application that includes a fair amount of JavaScript. When I was prototyping the initial idea, I just hacked together a few functions to demonstrate how the application would eventually behave intending to go forward re-writing the JavaScript in an object-oriented nature.Now that I'm getting into the implementation phase, I'm finding that creating object-oriented JavaScript for the sake of being object-oriented seems overkill - the project isn't likely to require any major modifications in the future that would warrant and object-oriented design. Instead, I'm finding that a set of concise, cohesive functions are working well.So, with that said and with attempting to adhere to the KISS principle, when a set of functions are providing a suitable solution to a problem, are there any other reasons worth considering to convert my code into an object-oriented design? I think that the usefulness of with can be dependent on how well your code is written. For example, if you're writing code that appears like this:var sHeader = object.data.header.toString();var sContent = object.data.content.toString();var sFooter = object.data.footer.toString();then you could argue that with will improve the readability of the code by doing this:var sHeader = null, sContent = null, sFooter = null;with(object.data) { sHeader = header.toString(); sContent = content.toString(); sFooter = content.toString();}Conversely, it could be argued that you're violating the Law of Demeter, but, then again, maybe not. I digress =).Above all else, know that Douglas Crockford recommends not using with. I urge you to check out his blog post regarding with and its alternatives here. I think that there are a lot of good answers here with a lot of good suggestions, however, I also disagree with most of the answers that say "start learning with jQuery." I'm passionately against learning a framework for a language before learning the language in which the framework is implemented. You're automatically creating a level of abstraction for yourself. Knowing the language prior to learning jQuery or any other framework will help enhance your ability to understand what the framework is doing, how to write better code, and how to implement a feature into the framework that you wish was there but isn't.With that said, here's a set of resources that I have found to be extremely helpful in learning JavaScript (some of them have already been mentioned):WebsitesW3Schools JavaScriptReferenceDouglas Crockford's WebsiteBooksHead First JavaScript. This book is really good at getting you up to speed on the synxtax of JavaScript and what it's capable of without getting you bogged down into the technical implementations of the language. It also helps connect the dots between JavaScript and the DOM.JavaScript: The Good Parts At approximately 150 pages, this is a relatively easy read that explains the good parts of the language and the bad parts of the language. This book will make you a better JavaScript programmer by staying away from the 'awful parts' of the language while also helping you to stick to the good parts and writing more clear, maintainable, expressive code.VideosDouglas Crockford's videos on "Advanced JavaScript" (1, 2, 3)Douglas Crockford's video on "JavaScript: The Good Parts"FrameworksjQuery. This seems to be the favorite around Stack Overflow. I've done some work with it and it really is a good library. Prototype. This is another library that I enjoy using. It's class creation and inheritance support are nice as well as its API.IDEsAptana Studio is the best JavaScript IDE that I've ever used. It has all of the features you'd expect from a powerful IDE with respect to JavaScript. Notepad. You don't really need anything other than a web browser and text editor for writing JavaScript, so if this floats your boat, then go for it.Yes, there are more websites, books, and videos that can help you get started, but for someone that has a programming background, I can't imagine that picking up JavaScript would be utterly difficult. Additionally, there are other frameworks available, but jQuery and Prototype are the ones with which I'm most familiar and have found them to be really useful. First, there are two ways to setup the href - you can either do as you have stated above with the href referencing a '#', or you may set the href to reference "javascript:;"Secondly, I always recommend keeping the JavaScript in an external file and then managing the event handler there. Assuming you'd like to set this up whenever the page loads, you could do something like this:window.onload = { var myLink = document.getElementById('myLinkID'); myLink.onclick = function(evt) { var evt = (evt) ? evt : ((event) ? event : null); // for cross-browser issues evt.preventDefault(); evt.stopPropagation(); foo(); }} I don't know how much experience you have in C++, but assuming you've got a pretty good grasp of that language as well as object-oriented concepts, I recommend reading Head First Java - it's a really easy read and will catch you up with an overview of the language (including basic threading and sockets).For information on building data structures or implementing algorithms using the Java language, I recommend Data Structures &amp; Algorithms In Java. The books presentation is okay - some of the code is crunched on some pages, but the material is solid.Lastly, the Java API is a great resource, in my opinion. I can't think of a time when I didn't find what I was looking for on that site. Personally, I think that if you read through Head First and then work on some personal projects and keep the Java API by your side you'll be good to go. I see what you're trying to do, but one of the things to remember about patterns is that you shouldn't try to shoe-horn your design to fit a pattern. Patterns occur naturally - the behavior you're describing isn't really part of the Decorator Pattern.With that said, I'd imagine that you're going to want to unequip a weapon via some unique ID, say:Character.unequip(LIGHTSABER);If you'd try to fit this into the Decorator Pattern, you'd have to keep track of the currently equipped items and then, after removing a weapon, you'd have to update the reference of the object decorating the LIGHTSABER to the one LIGHTSABER is decorating. That's a lot of work.Instead, perhaps it's worth considering @Mitch's idea and let the character's weapons be help in a property bag. Remember that a character HAS-A set of weapons. To me, it seems like composition may be the way to go. You say that you need to validate that at least three of the options should be selected, but is there a chance that you'd need to validate more than those three? Do the controls have a unique ID or class name? Are you using a specific framework (jQuery, Prototype, etc)?Without knowing more about your project, it's hard to make any solid suggestions, but using pure JavaScript (without a framework), and assuming that you have, say, unique class names I'd say...After the DOM has loaded, load all of the controls you need to validate into an array (get them via their ID or class name)Attach an event listener to submit to catch whenever it has been clickedBefore the submit actually occurs, iterate through your list of controls and validate each one as necessary. If the validation is good, continue with the submit's default action; otherwise, return some form of error message to the user.This may sound like a very general solution, but it's hard to give any concrete code without knowing more about your setup. Because I primarily do web development, I've abstracted out some common features that I end up doing frequently on sites for clients. Ajax Emailer. Nearly every site I work on has some type of contact form. I wrote a utility that allows me to drop some HTML on a page, having JavaScript field validation, and a PHP library that requires me to change a few parameters to work with each client's mail server. The only thing I have to write is CSS each time I include it on to a page.Stylesheet skeleton generator. I wrote a small JavaScript utility that walks the DOM for whatever page it has been included on and then stubs out a valid CSS skeleton so that I can immediately start writing styles without having to do the repetitive task for every site I work on.JavaScript Query String Parser. Occasionally I need to parse the query string but it doesn't warrant any major modifications to the server (such as installing PHP), so I wrote a generic JavaScript utility that I can easily configure for each site.I've got other odds and end utilities, as well, but they are kind of hacked together for personal use. I'd be embarrassed to let anyone see the source.UpdateSeveral people have asked for my stylesheet skeleton generator in the comments so I'm providing a link to the project here. It's more or less based on the way that I structure my XHTML and format my CSS, but hopefully you'll find it useful. There are a number of JavaScript obfuscation tools that are freely available; however, I think it's important to note that it is difficult to obfuscate JavaScript to the point where it cannot be reverse-engineered. To that end, there are several options that I've used to some degree overtime:YUI Compressor. Yahoo!'s JavaScript compressor does a good job of condensing the code that will improve its load time. There is a small level of obfuscation that works relatively well. Essentially, Compressor will change function names, remove white space, and modify local variables. This is what I use most often. This is an open-source Java-based tool.JSMin is a tool written by Douglas Crockford that seeks to minify your JavaScript source. In Crockford's own words, "JSMin does not obfuscate, but it does uglify." It's primary goal is to minify the size of your source for faster loading in browsers.Free JavaScript Obfuscator. This is a web-based tool that attempts to obfuscate your code by actually encoding it. I think that the trade-offs of its form of encoding (or obfuscation) could come at the cost of filesize; however, that's a matter of personal preference. In my personal experience with Ubuntu, the two places that I consistently found help were Ubuntu Forums and Ubuntu Wiki. These two sites demonstrate just how helpful, organized, and motivated the Ubuntu Community is.An additional resource is also the Ubuntu channel on IRC. Whenever I was stuck with an issue that I felt warranted a discussion with someone (or a handful of people), IRC was always a good place to go. Lastly, I tend to learn a lot from reading blogs from people that are heavily involved in Ubuntu's development. Planet Ubuntu is a pretty good feed to keep in your reader. It's essentially an aggregation of a number of blogs. The majority of the posts are related to Ubuntu; however, there are occasional posts that are just about the developer's thoughts and opinions. Ruby on Rails has the Prototype framework available. This framework is used by Script.aculo.us and it provides an autocompleter control that may provide the functionality that you're seeking. First, I recommend reading a book such as jQuery in Action. It's a well-written, informative, easy-to-follow book all about the framework. I always find that reading a book about a framework helps to expose a lot of the things available in the API that simply aren't likely to be revealed in just hacking together projects. Case in point, I've seen numerous answers about jQuery on Stack Overflow that talk about how to accomplish a given task, but the answer doesn't necessarily showcase the easiest way to do it (just a way to do it) because it doesn't leverage functions in the framework that are meant to be used for that purpose - books help issues like this.With that said, I don't know of any "open source software projects" per se, but check out any major site that uses the framework. The jQuery website mentions various sites that utilize the framework, and I'm sure a quick Google search would return more than enough results to keep you busy. I always like visiting Wufoo whenever I need some form inspiration. Speaking from some experience in developing a small tool myself, I've used YUI's rich control set with Prototype for DOM manipulation in the past and experienced no issues. Admittedly, this was a small tool that didn't use a wide array of the controls.Even so, I'm always hesitant to use multiple frameworks on my web projects; however, if you're only using jQuery's DOM functionality and YUI's control functionality, then I think you're fine - there's not really a conflict of interest there. Plus, with jQuery's noConflict() mode and YUI's namespacing, the two frameworks really shouldn't trump one another. At one time it was 800px; however, more and more sites are beginning to use 1000px. This is driven by the fact that, more often than not, visitors' low end resolutions are at 1024x768. The additional 24 pixels leaves room for the browser chrome, padding and margins you may want to manipulate, etc.Just to give some perspective, even the new wave of netbooks with their tiny screen have resolutions of 1024x768.But, above all else, know your audience as @warren suggests and capitalize on that. This code assumes that you have an anchor or that will trigger to movement when it is clicked:document.getElementById('moveTrigger').onclick = function() { var listTwo = document.getElementById('secondList'); var options = document.getElementById('firstList').getElementsByTagName('option'); while(options.length != 0) { listTwo.appendChild(options[0]); } } From a practice standpoint - excluding accessibility - modal windows provide an alternative that are less startling as, say, dialog boxes and feel less intrusive than pop-up windows. They usually have a more cohesive feel to the site than either of the two aforementioned method. Aside from pictures or media, I've used modal dialogs to serve the same purpose as dialog boxes - to get the user to give some form of required input, or to acknowledge something before letting them interact with the site again.From a purely accessible standpoint, they aren't so great. They typically require JavaScript, and, because of the way that modals are managed with respect to the DOM, screen readers will not interpret them well. To combat this, it's always a good idea to degrade gracefully - one suggestion is to take the content of the modal dialog and place it on a page. Whenever the modal dialog should appear, have the current page redirect to the 'modal page', get the user's input, and return to the page it was on.Finally, as far as my personal opinions are concerned, I don't mind modal windows. I think that, when used correctly, they provide a decent experience - if something has to get my attention, then I'd rather it do so without redirecting me from the page, showing an ugly operating system themed dialog, or a pop-up (which my browser will likely block, anyway). I guess, to sum it up, if I had to choose how I'd like to be interrupted, then I'd choose a modal dialog. OrganizationAll of my scripts are maintained in a directory structure that I follow whenever I work on a site. The directory structure normally goes something like this:+--root |--javascript |--lib |--prototype.js |--scriptaculous |--scriptaculous.js |--effects.js |--.. |--myOwnScript.js |--myOwnScript2.jsIf, on the off chance, that I'm working on a team uses an inordinate amount of scripts, then I'll normally create a custom directory in which we'll organize scripts by relationship. This doesn't happen terribly often, though.CompressionThough there are a lot of different compressors and obfuscators out there, I always come back to YUI Compressor.InclusionUnless a site is using some form of a master page, CMS, or something that dictates what can be included on a page beyond my control, I only included the scripts necessarily for the given page just for the small performance sake. If a page doesn't require any script, there will be no script inclusions on that page. It's indirectly possible to call a PHP function using JavaScript. As other people have already mentioned, you're going to want to do some type of request - this doesn't necessarily have to be Ajax. It could be synchronous. Without knowing exactly what you're trying to accomplish, here's what I would suggest:Attach an event handler to the form's submit option (or use the standard submit if you're not going to use Ajax)Bundle up any parameters that will need to be passed to the PHP function either in a POST or in the query string of the address to the page.Fire the request (either asynchronously or via submit)In the PHP script that is the target of the request, pull out of the parameters from the $ _ POST or $ _ GET.Call the PHP function that you need with the parameters.Echo back the response and parse it as needed once the request completes.Again, this is a bit general but so is your question. Hopefully this gives some sort of direction. Is there a more efficient way to convert an HTMLCollection to an Array, other than iterating through the contents of said collection and manually pushing each item into an array? DefinitionEssentially, coupling is how much a given object or set of object relies on another object or another set of objects in order to accomplish its task.High CouplingThink of a car. In order for the engine to start, a key must be inserted into the ignition, turned, gasoline must be present, a spark must occur, pistons must fire, and the engine must come alive. You could say that a car engine is highly coupled to several other objects. This is high coupling, but it's not really a bad thing.Loose CouplingThink of a user control for a web page that is responsible for allowing users to post, edit, and view some type of information. The single control could be used to let a user post a new piece of information or edit a new piece of information. The control should be able to be shared between two different paths - new and edit. If the control is written in such a way that it needs some type of data from the pages that will contain it, then you could say it's too highly coupled. The control should not need anything from its container page. For a true button effect, I also like to introduce a hover or a focus style. Similar to what @Roburg has mentioned, I normally do something like:input#button { border: 2px outset rgb(0, 0, 0);}input#button:focus { border: 2px inset rgb(0, 0, 0);}This will give the illusion that the button has been pressed even though it isn't a true button, per se. I'm currently working on a project where a section of the code looks like this:Select Case oReader.Name Case "NameExample1" Me.Elements.NameExample1.Value = oReader.ReadString .... Case "NameExampleN" Me.Elements.NameExampleN.Value = oReader.ReadString ....End SelectIt continues on for a while. The code is obviously verbose and it feels like it could be improved. Is there any way to dynamically invoke a property in VB.NET such that something like this can be done:Dim sReadString As String = oReader.ReadStringMe.Elements.InvokeProperty(sReadString).Value = sReadString Assuming that the website you're going to be building is hosted on a WAMP stack, then I'd say continue to use that; otherwise, you may wanna stick with Windows/IIS/PHP/MySQL or SQL Server. I always try to make sure my development environment mirrors production as much as possible.Secondly, if the user is simply logging in, submitting a form, and is then considered to be done, then using Ajax might be overkill; however, if you're definitely going to be going to Ajax route, then I definitely recommend using a library. Prototype or jQuery are fine - either one makes Ajax ridiculously simple.Finally, as far as suggested tools are concerned, find something that fits the bill for what you're developing. If this site is as simple as you claim it is, something like Notepad++ might be sufficient. Another option for the WAMP/LAMP stack is Aptana Studio. If you're going the Windows/IIS/SQL Server route, then use some of the Microsoft Express tools.I could be way off, but if you're building a really simple site, don't spend more time configuring shiny new tools for something that can be done with the existing toolbox you've got. IE will cache URLs in order to make loading faster, but if you're, say, polling a server at intervals trying to get new information, IE will cache that URL and will likely return the same data set you've always had.Regardless of how you end up doing your GET request - vanilla JavaScript, Prototype, jQuery, etc - make sure that you put a mechanism in place to combat caching. In order to combat that, append a unique token to the end of the URL you're going to be hitting. This can be done by:var sURL = '/your/url.html?' + (new Date()).getTime();This will append a unique timestamp to the end of the URL and will prevent any caching from happening. At work, I'm frequently working on projects where numerous properties of certain objects have to be set during their construction or early during their lifetime. For the sake of convenience and readability, I often use the With statement to set these properties. I find thatWith Me.Elements .PropertyA = True .PropertyB = "Inactive" ' And so on for several more linesEnd WithLooks much better thanMe.Elements.PropertyA = TrueMe.Elements.PropertyB = "Inactive"' And so on for several more linesfor very long statements that simply set properties.I've noticed that there are some issues with using With while debugging; however, I was wondering if there were any compelling reasons to avoid using With in practice? I've always assumed the code generated via the compiler for the above two cases is basically the same which is why I've always chosen to write what I feel to be more readable.  Using the Add\Remove Windows Components in Control Panel, I always remove...GamesDocument TemplatesMSN ExplorerOutlook ExpressFor the look and feel I...Revert to the classic start menu; however, if it's Vista, I leave it as is because I like the indexed search feature. Revert to a classic desktop with large icons and make sure that My Computer is the first icon (versus My Documents)I also perform the things you mentioned aboveBefore installing any software I...Install any outstanding Windows updatesRun a Disk Clean UpRun Disk DefragSetup scheduled tasks for Clean Up, Defrag, and other personal toolsFor tools (outside of my IDEs and other necessary development tools), I install..TweakUIIE6, IE7, Safari, Chrome, Opera, and FirefoxInstall the set of Firefox plug-ins I always use for development'Open Command Prompt Here' shell extensionInstall Consolas and set it as the default font for my editors (IDEs, Notepad++, etc) Short answer: No, you don't need to have the select box within a form. Where is your JavaScript currently included with respect to the body tag in your HTML? Remember that if you have inline JavaScript included in the head if your page, then it will fire as the page is loaded. At this point, the select box will not have been parsed and, thus, your code cannot access it in order to disable it.I'm no fan of mixing JavaScript and markup together, but this demo should work for all intents and purposes.&lt;html&gt; &lt;head&gt; &lt;title&gt;JavaScript Select Demo&lt;/title&gt; &lt;/head&gt; &lt;body&gt; &lt;select id="mySelect" onchange="updateChoice();"&gt; &lt;option value="1"&gt;First&lt;/option&gt; &lt;option value="2" selected=""&gt;Second&lt;/option&gt; &lt;/select&gt; &lt;/body&gt; &lt;script type="text/javascript"&gt; document.getElementById('mySelect').disabled = true; &lt;/script&gt;&lt;/html&gt;If, for whatever reason, you have to keep the script located in the page rather than an external file, you could setup an event handler to perform the same functionality after the page has loaded. Rather than keeping code at the bottom of the markup, you can include this in your head node: &lt;head&gt; &lt;title&gt;JavaScript Select Demo&lt;/title&gt; &lt;script type="text/javascript"&gt; window.onload = function() { document.getElementById('mySelect').disabled = true; ; } &lt;/script&gt; &lt;/head&gt;Lastly, rather than incorporate an onchange handler in the attributes of your markup, you could alternatively setup an event handler in your JavaScript to perform the same behavior. jQuery makes this really easy. Since you're referring to instance variables, I'm assuming that you're working in an object-oriented language. To some degree, when to use instance variables, how to define their scope, and when to use local variables is subjective, but there are a couple of rules of thumb you can follow whenever creating your classes.Instance variables are typically considered to be attributes of a class. Think of these as adjectives of the object that will be created from your class. If your instance data can be used to help describe the object, then it's probably safe to bet it's a good choice for instance data.Local variables are used within the scope of methods to help them complete their work. Usually, a method should have a purpose of getting some data, returning some data, and/or proccessing/running an algorithm on some data. Sometimes, it helps to think of local variables as ways of helping a method get from beginning to end. Instance variable scope is not just for security, but for encapsulation, as well. Don't assume that the "goal should be to keep all variables private." In cases of inheritance, making variables as protected is usually a good alternative. Rather than marking all instance data public, you create getters/setters for those that need to be accessed to the outside world. Don't make them all available - only the ones you need. This will come throughout the development lifecycle - it's hard to guess from the get go.When it comes to passing data around a class, it's difficult to say what you're doing is good practice without seeing some code . Sometimes, operating directly on the instance data is fine; other times, it's not. In my opinion, this is something that comes with experience - you'll develop some intuition as your object-oriented thinking skills improve. I could be misinterpreting your question, but, yes, this is possible. The way that I would go about doing it is this:var oElement = document.getElementById('elementId'); // get a reference to your elementoElement.onclick = clickHandler; // assign its click function a function referencefunction clickHandler() { // this function will be called whenever the element is clicked // and can also be called from the context of other functions}Now, whenever this element is clicked, the code in clickHandler will execute. Similarly, you can execute the same code by calling the function from within the context of other functions (or even assign clickHandler to handle events triggered by other elements)> Create a Node class and give it an instance variable of type Node. Initialize it to null - if said node is connected to another node, then this instance variable will refer to it; otherwise, it will remain null.If the node may be connected to numerous nodes (which is quite common for graphs), then use an ArrayList to store all of the nodes to which said node is connected. I'm unclear on the implementation details you are seeking (such as background, or just a border along the side of the window, etc); however, it's possible albeit a little tedious.One example that comes to mind would be to have n-block level elements, such as divs, and then give them each a small height (a couple of pixels, for example) and then gradually change the background color of each subsequent element. In my mind, Code Reviews are developer-centric. By this, I mean that developers review each others code to enforce best practices and good coding standards. Ideally, this should make sure that the code being checked into the application is at the highest quality. Whether or not this is done is a whole other story.Quality Assurance is user-centric. I see QA as treating software as a blackbox - the code is irrelevant at this stage. QA should be evaluating various aspects of the application: usability, stress tests, requirements fulfillment, etc.As to whether or not they can be done at the same time depends on the time of application that's being built. For example, applications could have automated tools running use case simulations every, say, hour on the most recent build. The problem with this, though, is that the use cases are locked into whatever has been coded or recorded. There's little variation. It continues to evaluate only whatever use cases and whatever behavior has been built into the simulation.Additionally, it's usually the case that a testing department or QA department is in charge of the, ahem, QA of the application whereas the developers are in charge of the code reviews and, as such, the code quality.  As @Ryan Smith suggested, this greatly depends on the implementation details of the website. I'm sure that there is a off-the-shelf framework offering a storefront application with all the bells and whistles (such as the types of scripts you are mentioning); however, these can range anywhere from being free and open source, or very expensive.Implementing a script like this yourself isn't very difficult. Assuming that you're keeping track of the users on the website in some form of data store (typically a backend database) you could do something like this:When the page loads, fire a JavaScript that makes an Ajax requestHave the page that's the target of the Ajax request select a count of the number of rows in the table storing the active users. Return this result.When the request completes, have the Ajax callback insert the number into the DOM in whatever place you'd like.You can set this process to repeat at certain intervals so that the pages containing the script are dynamically updated showing a relatively up to date count of the number of users online. I agree with @annakata that this question needs some more clarification, but here is a very, very basic example of how to setup an onclick event handler for the radio buttons:&lt;html&gt; &lt;head&gt; &lt;script type="text/javascript"&gt; window.onload = function() { var ex1 = document.getElementById('example1'); var ex2 = document.getElementById('example2'); var ex3 = document.getElementById('example3'); ex1.onclick = handler; ex2.onclick = handler; ex3.onclick = handler; } function handler() { alert('clicked'); } &lt;/script&gt; &lt;/head&gt; &lt;body&gt; &lt;input type="radio" name="example1" id="example1" value="Example 1" /&gt; &lt;label for="example1"&gt;Example 1&lt;/label&gt; &lt;input type="radio" name="example2" id="example2" value="Example 2" /&gt; &lt;label for="example1"&gt;Example 2&lt;/label&gt; &lt;input type="radio" name="example3" id="example3" value="Example 3" /&gt; &lt;label for="example1"&gt;Example 3&lt;/label&gt; &lt;/body&gt;&lt;/html&gt; Test-Driven Development lends itself more to developing code than for developing user-interfaces. There are a few different ways in which TDD is performed, but the preferred way of true TDD is to write your tests first, then write the code to pass the tests. This is done iteratively throughout development.Personally, I'm unsure of how you would go about performing TDD for UI's; however, the team that I am on performs automated simulation tests of our UIs. Basically, we have a suite of simulations that are run every hour on the most recent build of the application. These tests perform common actions and verify that certain elements, phrases, dialogs, etc, etc, properly occur based on, say, a set of use cases.Of course, this does have its disadvantages. The downside to this is that the simulations are locked into the code representing the case. It leaves little room for variance and is basically saying that it expects the user to do exactly this behavior with respect to this feature. Some testing is better than no testing, but it could be better. Though these are by no means official, the common practices that I follow would result in something like this:Create the element that will act as the notification container in the markup, but hide it by default (this can be done numerous ways - JavaScript, external CSS, or inline styles).Keep the scripts responsible for the behavior of the notification outside of the markup. In the example above, you can see there is an onclick as well as another function that fires on page load contained in the markup. Though it works, I see this as mixing presentation and behavior.Keep the notification message's presentation contained in an external stylesheet.Again, these are just my common practices stated in the context of your question. The thing with web development, as the nature of your question already shows, is that there are so many ways to do the same thing with the same results. Setup the onchange event handler for the select box to look at the currently selected index. If the selected index is that of the 'Other Reason' option, then display the message; otherwise, hide the division. &lt;html&gt; &lt;head&gt; &lt;script type="text/javascript"&gt; window.onload = function() { var eSelect = document.getElementById('transfer_reason'); var optOtherReason = document.getElementById('otherdetail'); eSelect.onchange = function() { if(eSelect.selectedIndex === 2) { optOtherReason.style.display = 'block'; } else { optOtherReason.style.display = 'none'; } } } &lt;/script&gt; &lt;/head&gt; &lt;body&gt; &lt;select id="transfer_reason" name="transfer_reason"&gt; &lt;option value="x"&gt;Reason 1&lt;/option&gt; &lt;option value="y"&gt;Reason 2&lt;/option&gt; &lt;option value="other"&gt;Other Reason&lt;/option&gt; &lt;/select&gt; &lt;div id="otherdetail" style="display: none;"&gt;More Detail Here Please&lt;/div&gt;&lt;/body&gt;&lt;/html&gt;Personally, I'd take it a step further and move the JavaScript into an external file and just include it in the header of the page; however, for all intents and purposes, this should help answer your question. In JavaScript, I know that a closure is can be defined as a nested function that has access to its containing function's variables. For example:function outerFunction(x, y) { function innerFunction() { return x + y + 10; } return innerFunction;}Now, the following code is wiring up a callback for the onreadystatechange property of the request object; however, I was wondering if, by definition, this is also considered to be a closure:/* This is a contrived example, I know. * Bear with me - it demonstrates the point I'm trying to convey. */function submitHandler() { var oRequest = createRequest(); // assume I'm getting an instance of the xhr var sUsername = 'Tom'; // assume this is needed for work in the handler var This = this; oRequest.onreadystatechange = function() { This.handleResponse(oRequest, sUsername) }}function handleResponse(oResponse, sUsername) { if(oResponse.readyState === 4 &amp;&amp; oResponse.status === 200) { // do work with the username } else { // we're not done yet... }}I realize that the handleResponse function could also just be written as an anonymous function in the context of submitHandler, but I find that more complex Ajax code can be more readable and easily maintained if callbacks are defined outside the scope of the function calling back to them. Again, this is a contrived example that I'm using in hopes of simply demonstrating the point of my question. Others have made some great suggestions (The Rhino Books, Mozilla Developer Center, and references such as W3 Schools). Once you get a good grasp on the language, I highly recommend JavaScript: The Good Parts  by Douglas Crockford. After reading your clarification, @Ates Goral's answer provides how to perform the same operation you're doing in C# in JavaScript.@Gumbo's answer provides the best way to check for null; however, it's important to note the difference in == versus === in JavaScript especially when it comes to issues of checking for undefined and/or null.There's a really good article about the difference in two terms here. Basically, understand that if you use == instead of ===, JavaScript will try to coalesce the values you're comparing and return what the result of the comparison after this coalescence.  Have you tried rake db:schema:dump?Essentially, make sure that your database.yml file is referencing the database you wish to dump, and then run the command. It'll take all of the tables and indexes in said database and then write it out to schema.rb.Note that you should rename schema.rb once it contains the dump; otherwise, it could it overwritten. Here's an update of the ticket I submitted. It seems as if @Webdawson has attached a sample page to the ticket. I have a personal project that's been online for sometime now. I've been keeping a tally of downloads by doing this:When the user clicks the download link, it hits a PHP script that writes some information to a table.Once the data is written, the script returns the path to the actual file.The user then has the ability to save the file to their hard disk as if it was any other download.This has worked well enough for sometime; however, it prevents users from being able to right-click > save target as... because they'll actually just see download.php appear in the "File Save.." dialog. Thus, the only way to download the project is to left-click on the link.I'd like to improve the process so that a user can download the project using whatever method with which s/he is most comfortable. So, what are some better ways to transparently log downloads without getting in the user's way? For what it's worth, the machine is a standard LAMP stack, so no .NET options here. For all browsers, save for IE6, do this:div#footer { bottom: 0; width: 100%; height: 25px; position: fixed;}I know you mentioned not wanting to use JavaScript, but as for IE6, it's been my experience that you may have to resort to some sort of JavaScript expression in the CSS to get it to work as smoothly as this CSS does in other browsers. I'd argue that, at some point, it's no longer about topics. It's about doing stuff. You gotta write code an you've gotta write a lot of it. People will often tell you to find some niche problem to try and solve when learning a new language and that's perfectly fine, but if there's an application or feature of an application that you really enjoy using or really admire, attempt to build it (or parts of it) yourself. Even more so, if you find your self wondering Hey, how does [this application] do that?! Try to build it.Many of your projects may never see the light of day beyond your desktop, but the learning, experience, and tools you'll have under your belt will be something that you can carry over to each subsequent project. You never know, though, one of those little hobby projects may end up solving a problem for someone. I'm assuming that you're wanting to insert a style tag versus a link tag (referencing an external CSS), so that's what the following example does:&lt;html&gt; &lt;head&gt; &lt;title&gt;Example Page&lt;/title&gt; &lt;/head&gt; &lt;body&gt; &lt;span&gt; This is styled dynamically via JavaScript. &lt;/span&gt; &lt;/body&gt; &lt;script type="text/javascript"&gt; var styleNode = document.createElement('style'); styleNode.type = "text/css"; // browser detection (based on prototype.js) if(!!(window.attachEvent &amp;&amp; !window.opera)) { styleNode.styleSheet.cssText = 'span { color: rgb(255, 0, 0); }'; } else { var styleText = document.createTextNode('span { color: rgb(255, 0, 0); } '); styleNode.appendChild(styleText); } document.getElementsByTagName('head')[0].appendChild(styleNode); &lt;/script&gt;&lt;/html&gt;Also, I noticed in your question that you are using innerHTML. This is actually a non-standard way of inserting data into a page. The best practice is to create a text node and append it to another element node.With respect to your final question, you're going to hear some people say that your work should work across all of the browsers. It all depends on your audience. If no one in your audience is using Chrome, then don't sweat it; however, if you're looking to reach the biggest audience possible, then it's best to support all major A-grade browsers This should do what you want, and should work across the major browsers:function start(){ var g_Div = document.getElementById("bigdiv"); var littleDiv = document.createElement('div'); littleDiv.style.background = 'rgb(255, 255, 255)'; littleDiv.style.width = '5px'; littleDiv.style.height = '5px'; littleDiv.style.left = '300px'; littleDiv.style.top = '300px'; littleDiv.style.position = 'absolute'; g_Div.appendChild(littleDiv);} I'm attempting to load up an XML document (specifically an RSS feed) via an Ajax request, parse it, and insert some information based on said feed into my page. The code works fine in Firefox, Opera, Chrome, and Safari, but not IE7. Go figure.After doing some initial debugging, I've found that the XML string is being retrieved via the request, and the specific node type I'm getting when trying to parse nodes out of the document is HTMLUnknownElement.Here's the relevant code:$.get('feed.php', function(oXmlDoc) { var titles = $(oXmlDoc).find('title'); var dates = $(oXmlDoc).find('pubDate'); for(var i = 0; i &lt; 5; i++) { parseNodes(titles[i].firstChild.nodeValue, dates[i].firstChild.nodeValue)); }});The parseNodes function is never actually being hit because IE cannot access firstChild and, consequently, nodeValue.Thanks in advance for any ideas and/or suggestions on how to address this. I was able to fix this, but it required a little bit of IE-specific code in order to get it working problem. Essentially, here's how I ended up having to fix the problem.First, I verified that my server-side code was returning the proper content type:header('Content-Type: application/rss+xml');After that, I performed a check to see which browser was currently accessing the page:if($.browser.msie) { // ie-specific code (see below)} else { // code as posted in the question}In order to have more control over the ajax request, I opted to go with jQuery's $.ajax function rather than the $.get function. var oXmlDoc = new ActiveXObject("Microsoft.XMLDOM");$.ajax({ url: "feed.php", processData: false, data: oXmlDoc, success: function(sXml) { oXmlDoc.loadXML(sXml) var titles = $('title', oXmlDoc); var dates = $('date', oXmlDoc); for(var i = 0; i &lt; 5; i++) { parseNodes(titles[i].childNodes[0].nodeValue, dates[i].childNodes[0].nodeValue)); } }});Anyway, it's not as elegant as I would like but it gets the job done. In order to dynamically center some type of label in each quadrant of the graph, you'll have to have some way of calculating the coordinates. Of course, I'm not really familiar with Birt and I'm making the assumption that the graph's red markers will vary. Anyway, assuming that you can get the coordinates, you could write a function that would dynamically generate the label based on a couple of parameters:function generateLabel(sContent, iXoffset, iYoffset) { var eLabel = document.createElement('span'); eLabel.appendChild(document.createTextNode(sContent)); var eDivision = document.createElement('div'); eDivision.appendChild(eLabel); eDivision.style.left = iXoffset + 'px'; eDivision.style.top = iYoffset + 'px'; // include other styles here... return eDivision;}and then from there, you can call this function with the set label content and offset coordinates:var eQuadrantOneLabel = generateLabel('Quadrant One', 10, 25);// and so on...Then just add the element to the graph's container (assuming that is has an id of, say, graph):var eGraphContainer = document.getElementById('graph');eGraphContainer.appendChild(eQuadrantOneLabel);// and so on for each label... I'm currently working on a small web application using Visual Studio 2008 Express. I'm attempting to retrieve an XML document from a server using a client library and then save the document into a database column (using Linq). The database column has the data type specified as xml. Unfortunately, I've been unsuccessful during my first few attempts.Assuming that I've already got a reference to the data context object, here is the basics of what it is that I'm attempting to do:// using a client library, requestthe XML document from the serverXmlDocument oXmlDoc = oClient.GetDataAsXML();InformationLog oLog = new InformationLog();oLog.InfoXML = oXmlDoc.InnerXml; // this is where the problem occursdbContext.InformationLogs.InsertOnSubmit(oLog);dbContext.SubmitChanges();Specifically, the error I get is:Cannot implicitly convert type 'System.Xml.XmlNode' to 'System.Xml.Linq.XElement'I'm new to ASP.NET MVC and Linq, so I know that I'm missing something. In addition to the answer, I'm also curious as to why it's impossible to simply save the XML as-is without any additional processing. There is a version of Firebug called Firebug Lite that will work with Internet Explorer. It's performance is going to be based on how complex your pages are; however, for relatively lightweight pages, it should provide some insight.I recommend this tool rather than simply using Firebug and Firefox because not all errors that occur in Internet Explorer will occur in Firefox, and so performing any debugging in that browser may not yield any results. After doing a quick inspection of the search field using Firebug, it appears that clicking on each of search type links (Web, Images, etc) simply modifies the DOM. This includes adding fields, removing fields, toggling class names, etc. I wouldn't be surprised if hidden fields are also being manipulated.Behavior like this is accomplished using JavaScript. Specifically (and at a very high-level), there are event handlers attached to the links each of which modify the DOM in their own way.It can definitely be implemented using Visual Studio 2008 as it's really (and likely) nothing more than CSS, JavaScript, and HTML. .NET really wouldn't come into play until you're ready to take the specified query and begin running it against your data store.Paolo's answer gives a really good, straight-forward example of how that behavior can be emulated. I'm currently working on a small application that works like this:When the user clicks a link, an Ajax GET request is fired.The request hits a server-side PHP script.The script, which requests information for another domain, retrieves a JSON feed.The feed is then echoed back to the client for parsing.I'm not really a PHP developer, so I am looking for some best practices with respect to cross-domain requests. I'm currently using file_get_contents() to retrieve the JSON feed and, although it's functional, it seems like a weak solution. There's not really a standard way to do this - it's just the nature of the beast; however, Adobe is currently working on BrowserLabs which should help to solve this exact issue. As marr75 mentioned, GET's are cached. There are a couple of ways to combat this. Aside from modifying the response header, you can also append a randomly generated query string variable to the end of the targeted URL. This way, IE will think it is a different URL each time it is requested.There are multiple ways to do this (such as using Math.random(), a variation on the date, etc).Here's one way you can do it:var oDate = new Date();var sURL = "/game/getpuzzleinfo?randomSeed=" + oDate.getMilliseconds();$.get(sURL, null, function(data, status) { // your work}); That separator is actually a table cell contained within a table row. It maintains a background-color and background-image to give it the effect similar to what you'd see in a desktop application.I'm not sure to what extend you'd want to do this, but assuming that the table cell is already specified in the markup and it has the appropriate styles, you'd need to setup several things:A mousedown handler for registering when the user has clicked on the cell.A mousemove handler for updating the position of the separator in context of the browser window.A mouseup handler for knowing when to stop updating the location of the separator.There are variations on how to do this, but here's a very, very rough example:var bMouseIsDown = false;Event.observe('separator', 'mousedown', function() { bMouseIsDown = true;});Event.observe('separator', 'mouseup', function() { bMouseIsDown = false;});Event.observe('separator', 'mousemove', function(evt) { if(bMouseIsDown === true) { var iX = Event.pointerX(evt); var iOffsetX = iX - Position.page($('separator'))[0]; var iWidth = $('separator').getDimensions().width; var iElementOffset = iWidth - iOffsetX; $(this).setStyle({ left: iX - iElementOffset }); }}); I would specify a classname in the JavaScript source and let an external CSS file take care of actually applying the formatting to it.CSS.styledElement { font-weight: bold;}JavaScriptvar eItem = ctn(tmpItem.price);eItem.className = "styledElement";dv.appendChild(eItem);Greg's approach is also good especially if you have to do everything in the JavaScript source. It's possible but only to a degree. You're going to need some server-side code to help you out. Without seeing your predefined format, it's tough to make any suggestions. At an abstract level, I'm assuming that an event will be composed of a time, a date, and a location. From here, it would seem as if you'd need to break down the process into the following:Client-sideFind each time, date, and location.For each of these, you're going to want to format them into your pre-defined representation.Submit this data to the server.Server-sidePerform any necessary validation or processingInsert it into the database JavaScript isn't allowed to make cross-domain requests. It's a big security risk. Instead, you'll have to execute a script on the server and have it return the results to your JavaScript function.For example, assuming that you're using JavaScript and PHP you could setup the application to work like this:JavaScript initiates an Ajax request to a page (or script) located on your server. It passes any required parameters to this page. The following code is based on jQuery (for the sake of being concise), but the principles are the same regardless of your framework.var sParameters = " ... " // this is defined by you$.ajax({ url: 'your-server-side-code.php', processData: false, data: sParameters, success: function(sResponse) { // handle the response data however you want }});The server-side code will respond to the request and pass along the necessary parameters to the cross-domain website. PHP's cURL library is good for this.// very contrivuted cURL configuration for purposes of example...$curl_connection = curl_init();$str_url = "http://you-url.com";curl_setopt($curl_connection, CURLOPT_URL, $str_url);curl_setopt($curl_connection, CURLOPT_GET, 1);// ... keep setting your options ...$str_response = curl_exec($curl_connection);curl_close($curl_connection);When the cross-domain website responds, your server-side code can echo the response back to the initial request. This should probably be validated before responding back, but it's just an example.print_r($str_response);A JavaScript response handler function can then parse the incoming response data. Note the success function in the first block of JavaScript code above. JSON would be perfect for this. Basically, you'll want to convert your object to it's JSON representation and then send that across the wire. Once it's available on the server, you can process it however you like.Crockford has a great article on what JSON is, how to understand the notation, and he provides a tool to convert your objects to JSON notation. Your question is confusing because you're using the same variable name, data, outside of your request as well as in the request callback. I'm not sure if you're asking to check for duplication based on data that has already been submitted and is back on the page, data that exists on the server, or if the data's simply "yes". Based on the code you provided, it would appear that data is considered to be duplicated if the server returns yes once the POST completes.Either way, maybe this will help:$(function() { $('#name').blur(function() { duplicate($('#name').val()); });});function duplicate(sData) { var sDuplicateValue = ...; // assign this whatever constitutes a duplicate value if(isDataDuplicate(sData, sDuplicateValue)) { // you have duplicate data } $.post('test.php', { name: sData }, function(sResposeData) { /* because of question ambiguity, i don't know if you want to compare * sData and sResponseData, or sResponseData and "yes." if it's the latter, * just do isDataDuplicate(sResponseData, "yes"); otherwise, do this: */ if(isDataDuplicate(sData, sResponseData) { // it's the same.. } });}function isDataDuplicate(sData, sDuplicateValue) { if(sDuplicateValue === null) { return sData === 'yes'; } else { return sData === sDuplicateValue; }} document.write() doesn't work with XHTML. It's executed after the page has finished loading and does nothing more than write out a string of HTML. Since the actual in-memory representation of HTML is the DOM, the best way to update a given page is to manipulate the DOM directly.The way you'd go about doing this would be to programmatically create your nodes and then attach them to an existing place in the DOM. For [purposes of a contrived] example, assuming that I've got a div element maintaining an ID attribute of "header," then I could introduce some dynamic text by doing this:// create my textvar sHeader = document.createTextNode('Hello world!');// create an element for the text and append itvar spanHeader = document.createElement('span');spanHeader.appendChild(sHeader);// grab a reference to the div headervar divHeader = document.getElementById('header');// append the new element to the headerdivHeader.appendChild(spanHeader); I'm not exactly sure what you're trying to do, but there are a couple of ways to go about resetting an array.You could just iterate through the existing array and set each index equal to null (or an empty string or 0 or whatever value you consider to be a reset):for(var i = 0; i &lt; arr.length; i++) { arr[i] = null;}You could also just update the existing reference to a new instance of an object:arr = []; Scriptaculous has a decent drag and drop implementation. It's based on Prototype which has a pretty good community. jQuery's does seem to be a bit larger and a more active as of late so you may want to stick with its draggable library. eval() provides access to the JavaScript compiler and this ultimately allows for code to be executed at a later time. The arguments passed to the function are passed to the JavaScript compiler after which the code is executed.Developers argue about the security of eval(). It is less secure, but if you're absolutely sure your input is sanitized before passing it along, then it shouldn't be a problem.Also, the results of eval() are generally slower because the code has not yet been compiled nor cached. There's obviously going to be a performance hit for using the function.It's also difficult to debug code that results from the use of eval() because there is little-to-no contextual information (think line numbers) about the code that is ultimately executed.In terms of web development, one of the current most popular uses of eval() is to deserialize a JSON string usually in the context of Ajax applications; however, this isn't to say that there aren't many other uses. Just as others have noticed, I think that there is something wrong with the code that you're using to dynamically generate the anchors. Nonetheless, here's an example that should achieve the result you're aiming for:$(document).ready(function(){ var eNav = document.getElementById('nav'); var aLink = null; for(var i = 0; i &lt; 5; i++) { aLink = document.createElement('a'); aLink.href = 'javascript:;'; aLink.id = i; aLink.appendChild(document.createTextNode('Link')); eNav.appendChild(aLink); } $("#nav a").click(function(event){ alert('Clicked '+ event.target.id); return false; });}); I don't know if you're using a specific plug-in or if you have the ability to easily modify the autocomplete source code, but I would attempt to do something like this:Find the function that is used to trigger the display of the autocompleteSet a boolean value when the autocomplete's visibility is triggered (true for visible, false for not)Check the status of the boolean value whenever you're attempting to catch enter (or tab)Note that you would have to make the boolean value publicly accessible in the context of the autocomplete object. Again, without knowing the specifics if your implementation it's difficult to say how best to change it but it could work something like this:var Autocomplete = { bIsVisible: false, display: function() { // toggle visibility of the autocomplete this.bIsVisible = !this.bIsVisible; }}You would could then utilize it by doing something like this:alert(Autocomplete.bIsVisible); // returns falseAutocomplete.display(); // triggers the display of the autocompletealert(Autocomplete.bIsVisible); // returns true The maximum size for a textarea in Firefox is 64K (it could be just 32K, I can't recall). 600,000 characters is larger than that. If the size of the text that you're pasting into the textarea does in fact exceed that size, then there's nothing you can do about it.Of course, one alternative would be to put some type of restriction on the data going into the field and then give the user some feedback as to why their data won't fit. I had a similar issue like this sometime ago using jQuery. The problem was that, in IE, the incoming response data needed to be handled by the Microsoft.XMLDOM ActiveX object. The general steps are to:Instantiate the ActiveX object. var oXmlDoc = new ActiveXObject("Microsoft.XMLDOM");Pass it the incoming response data and load it.oXmlDoc.loadXML(sXmlResponseData);Parse it as needed.You can check out the full resolution here. I'm using jQuery to setup an Ajax request that grabs an XML feed from a PHP script and then parses some information out of the feed and inserts it into the DOM. It works fine in Firefox; however, in Chrome, I am getting an empty string for the title element.Here's the basic setup of the Ajax request:$.get('feed.php', function(oXmlDoc) { $(oXmlDoc).find('entry').each(function() { $(this).find('title').text(); $(this).find('id').text(); // do other work... }); });For what it's worth, here's the PHP script that's grabbing data from the feed. I'm using cURL because I'm making the request across domains (and because it was a quick and dirty solution for the problem at hand).$curl = curl_init();curl_setopt($curl, CURLOPT_URL, $str_feed_url);curl_setopt($curl, CURLOPT_HEADER, false);curl_setopt($curl, CURLOPT_RETURNTRANSFER, true);$xml = curl_exec($curl);curl_close($curl);echo $xml;The XML data is being returned correctly and I can see the values of the sibling nodes in Chrome (such as ID), but, for whatever reason, I continue to get an empty string for the title node.Edit: As requested, here's a fragment of the relevant XML:&lt;entry&gt; &lt;id&gt;http://TheAddress.com/feed/01&lt;/id&gt; &lt;title type="text"&gt;The Title of the Post&lt;/title&gt; &lt;author&gt;&lt;name&gt;Tom&lt;/name&gt;&lt;/author&gt; &lt;published&gt;2009-11-05T13:46:44Z&lt;/published&gt; &lt;updated&gt;2009-11-05T14:02:19Z&lt;/updated&gt; &lt;summary type="html"&gt;...&lt;/summary&gt;&lt;/entry&gt; Because cross-site requests can't be done from the client, they need to be initiated from the server. I'm personally not familiar with Hiveminder, but the way in which you achieve requests from one domain to another is generally:On the client-side, grab any necessary information from the user and send it to your serverFrom the server-side, initiate a request to the next domain (in your case, Hiveminder)When the result is returned from said domain, send that information back up to the client.I don't know what language your using, but since you mentioned cURL you may be interested in checking out what PHP offers in its cURL manual. I'm working on a jQuery plugin that can be applied to multiple elements. The plugin includes some animation effects and I need to manage the event queue based on if the plugin is used on multiple elements (instead of one).What's the best way to detect if the plugin has been applied to a single element or to multiple elements?Edit... The length property works correctly if the plugin is passed multiple elements (such as $('.myClass').plugin()) but if the plugin is called on multiple, single elements (such as $('#myElem1').plugin() and $('#myElem2').plugin()) then the length returns one for each call.Is there are a way to detect multiple instances when the plugin is used as in the second example/ In my project, I have a self-referential association.I have a User model:class User &lt; ActiveRecord::Base has_many :relationships, :dependent =&gt; :destroy has_many :peers, :through =&gt; :relationshipsendAnd a Relationship model:class Relationship &lt; ActiveRecord::Base belongs_to :user belongs_to :peer, :class_name =&gt; "User"endWhen two users are peers with one another, there are obviously two records in the database.When one user opts to end a relationship, I'd like this to destroy both records - not just one side of the relationship.Is there a better way to go about doing this rather than loading the relationship twice in the controller (once for each side of the relationship)? I'm working on writing simple unit tests for a Rails 3 project, but I'm unable to actually execute any tests.Case in point, attempting to run the test auto-generated by Rails fails:require 'test_helper'class UserTest &lt; ActiveSupport::TestCase # Replace this with your real tests. test "the truth" do assert true endendResults in the following error:&lt;internal:lib/rubygems/custom_require&gt;:29:in `require': no such file to load --test_helper (LoadError) from &lt;internal:lib/rubygems/custom_require&gt;:29:in `require' from user_test.rb:1:in `&lt;main&gt;'Commenting out the require 'test_helper' line and attempting to run the test results in this error:user_test.rb:3:in `&lt;main&gt;': uninitialized constant Object::ActiveSupport (NameError)The action pack gems appear to be properly installed and up to date:actionmailer (3.0.3, 2.3.5)actionpack (3.0.3, 2.3.5)activemodel (3.0.3)activerecord (3.0.3, 2.3.5)activeresource (3.0.3, 2.3.5)activesupport (3.0.3, 2.3.5)Ruby is at 1.9.2p0 and Rails is at 3.0.3.The sample dump of my test directory is as follows:/fixtures/functional/integration/performance/unit-- /helpers -- user_helper_test.rb-- user_test.rbtest_helper.rbI've never seen this problem before - I've run the typical rake tasks for preparing the test environment. I have nothing out of the ordinary in my application or environment configuration files, nor have I installed any unusual gems that would interfere with the test environment.Edit March 9thXavier Holt's suggestion, explicitly specifying the path to the test_helper worked; however, this revealed an issue with ActiveSupport.Now when I attempt to run the test, I receive the following error message (as also listed above):user_test.rb:3:in `&lt;main&gt;': uninitialized constant Object::ActiveSupport (NameError)But as you can see above, Action Pack is all installed and update to date.Edit March 13thWhen attempting to run tests using rake test:units the following stack trace is dumped to the console:test/unit/bookmark_test.rb:3:in `&lt;top (required)&gt;': uninitialized constant Object::ActiveSupport (NameError) from C:/Ruby192/lib/ruby/gems/1.9.1/gems/rake-0.8.7/lib/rake/rake_test_loader.rb:5:in `load' from C:/Ruby192/lib/ruby/gems/1.9.1/gems/rake-0.8.7/lib/rake/rake_test_loader.rb:5:in `block in &lt;main&gt;' from C:/Ruby192/lib/ruby/gems/1.9.1/gems/rake-0.8.7/lib/rake/rake_test_loader.rb:5:in `each' from C:/Ruby192/lib/ruby/gems/1.9.1/gems/rake-0.8.7/lib/rake/rake_test_loader.rb:5:in `&lt;main&gt;'rake aborted!So looking into the file listed above, I see the following:#!/usr/bin/env ruby# Load the test files from the command line.ARGV.each { |f| load f unless f =~ /^-/ }To my knowledge, everything looks as expected. From your code, it looks as if you're attempting to pull the eWidth from the width of the photoWindow element. Why not grab it from the image itself?eWidth = $('.photoWindow img').width();I may also be missing something, but I'm unclear as to why you're performing a fadeIn() and a show() on the photoWindow - fadeIn() will display the element once it's completed firing.You may also be able to refactor that final block of code operating on the photoWindow like this:$('.photoWindow').css({ top: pTop + 10 + 'px', left: parseInt((pWidth / 2) - (eWidth / 2)) + 'px')}); You shouldn't need a plugin for this. CSS can keep the logo fixed and you can use JavaScript to change the display of the element once the user begins to scroll the page.Assuming that your logo has the ID of logo, the CSS would be:#logo { top: 0; position: fixed;}Since it appears you're using jQuery, you can do something like this:$(function() { // gets a reference to the document based on which browser is being used var oDoc = $.browser.msie === true ? window : document; // event handler for when the user scrolls $(oDoc).scroll(function() { // if the user is at the top, display the whole image if($(this).scrollTop() === 0) { $('#logo').css('margin-top', 0); // otherwise, pull the image up a single em (200 is arbitrary) } else if($(this).scrollTop() &gt; 200) { $('#logo').css('margin-top', '-1em'); } });}); Assuming that the HTML file is on the same domain as the site (because cross-domain requests won't work), you can initiate an Ajax request to retrieve the data and insert it into the containing element.Although you don't need to use jQuery (or any other library, for that matter) to handle the Ajax request and response, it makes it much easier especially when dealing with cross-browser nuances.You could do something like this (assuming that myModel has a display of none):// Initiate a request to the HTML file$.get('url-to-file-.html', function(data) { // Insert the returned data into an element with // the ID of myModel and then show it. $('#myModel').html(data).show();});Simple example, but that should do it. You can see more in-depth examples of jQuery's $.get() on the API page. Using vanilla JavaScript, you'll probably need to load up all of the element's by tag name and then locate it by evaluating each element's classname.For example (the styles are just for example)...var tableCells = document.getElementsByTagName('td');for(var i = 0, l = tableCells.length; i &lt; l; i++) { if(tableCells[i].className === 'droppedRow') { tableCells[i].style.padding = '1em'; }}If, on the other hand, you're using jQuery, then you should be able to use:$('.droppedRow').css('padding', '1em');Note however that in both of these examples, all cells that have the droppedRow class name will receive this styling (rather than just a single element).If you're not using a library, I'd say stick with the vanilla variant of this functionality - libraries would be too much overhead just to condense this to a single line.Maxym's answer also provides a solid implementation of getElementsByClassName for older browsers. I'm a fan of keeping CSS in a separate file and then importing it using the plugin. Overtime, this makes it easier to maintain and it makes it easier for users or future developers to work with your plugin rather than digging through JavaScript source (which will likely grow overtime).To apply a stylesheet with jQuery, you can do this:$(function() { $('head').append('&lt;link rel="stylesheet" href="plugin-styles.css" type="text/css" /&gt;');});Obviously, you'll need to know the path to the CSS file but If you ship a css directory with your plugin, this shouldn't be problem.As far as "ensuring [your] component gets the css it needs," the first option will work file as long as you make sure your elements have a unique identifier (classname or ID) that the JavaScript source can access.If you want to make sure that you're not loading the stylesheet multiple times, you can do something like this:$(function() { var bStylesheetExists = false; $('link').each(function() { if($(this).attr('href') === 'plugin-style.css')) { bStylesheetExists = true; } }); if(bStylesheetExists === false) { $('head').append('&lt;link rel="stylesheet" href="plugin-styles.css" type="text/css" /&gt;'); }}); One option would to be to store the cell's current border color in a variable and then reset it once the mouse leaves the cell.From your code above, it appears as if the color to which you want to return it is consistent so you can probably just store it in its own variable.You can refactor your code a little bit and do something like this:var sOriginalColor = '#8E8DA2';$('.shell') .mouseover(function(evt) { evt.preventDefault(); // specified for purposes of example mentioned in the comments $(this).parent('.shell').css('border-color', sOriginalColor); $(this).css('border-color', '#0000FF'); }) .mouseout(function() { $(this).parent('.shell').css('border-color', sOriginalColor); $(this).css('border-color', sOriginalColor); });Admittedly, I ran your code but I'm not completely sure that the solution I've provided is what you're looking for because there is some behavior happening related to event bubbling.If that's what you're experiencing, then reading the quirks mode article on events may help you pinpoint what's up. This is possibly the most insecure way to implement authentication in a web application. All of this information will be sent across the wire in plaintext.You're also always lowercasing the user's information so credentials are becoming even less secure.The typical way to go about building out an authentication system would be:Create a form that accepts a username and passwordVerify the user information on the server-side by evaluating it against the information in the database table.Return a response to the client-side based on the success or failure of the credentialsAll of this is contingent upon properly and securely registering a user. To do this:Accept a username and password in a registration formApply a hash and a salt to the specified passwordSerialize the information to the databaseIn all future logins attempts, you'll want to evaluate the users incoming information against the records stored in the database table by passing it through the same hash and salt.The thing is, implementing something like this varies widely depending on the platform that you're using.As far as evaluating this on the client side, the closest you'll be able to get to client-side validation is using Ajax to prevent a page refresh. As others have noted in the comments, your question really doesn't make sense but if you're looking to fire something off when an Ajax request has completed then you need to setup a callback function.Assuming that you're using jQuery (which I can't tell from your question if you are or aren't), then you'd do this:$.get('your-url.html', function(data) { // Your callback function. // Any word you need done after the response // has completed goes here.});If you need to do this in a post, then check out jQuery's $.post or even the $.ajax documentation.If you're not using jQuery, then you can still achieve this using vanilla JavaScript, but you'll need to look at the XHR object order to determine if you're ready to fire the callback. All of that information is covered in-depth at the Mozilla Developer Center. One option would be to write a GreaseMonkey script that attaches an event handler to each link on the page.Once the link is clicked, you intercept it's it's href attribute and then it let it continue processing it's standard behavior. From what I can tell, your User model has a a status property that denotes whether or not the user is online. Based on what you've specified, I can't tell if your controller is properly pulling back users or not; however, you can try something like this...In your controller:@users = Users.find(:all, :conditions =&gt; ["status = ?", "online"])And then in your associated view:&lt;ul&gt;&lt;% @users.each do |user| %&gt; &lt;li&gt; &lt;%= link_to image_tag(user.avatar.url(:thumb).to_s) %&gt; &lt;%= user.username %&gt; &lt;/li&gt;&lt;% end %&gt;&lt;/ul&gt;Finally, you're probably going to want to move the above code into a partial and then setup an Ajax polling mechanism that will check the server at a certain interval to make sure that your list is up to date. I have two models - Contacts and Organizations - setup in a has_and_belongs_to_many relationship:class Contact &lt; ActiveRecord::Base has_and_belongs_to_many :organizationsendclass Organization &lt; ActiveRecord::Base has_and_belongs_to_many :contactsendIn the contact's new view, I have the following collection_select:&lt;%= collection_select('contact', 'organization_ids', @organizations, :id, :name, {}, { :multiple =&gt; :true, :name =&gt; 'contact[organization_ids][]'}) %&gt;This works, but seems overly complicated for creating a multi-select box for this relationship.Is there a better helper available for this particular relationship? I'd prefer to use a multi-select box - not checkboxes. I'm working to migrate an entire site to a new server and need to setup htaccess so that it properly redirects old content while handling new content, too.The old domain is a simple landing page that consists of an index.html page and three directories: /images, /styles, /fonts.Whenever someone navigates to the old domain, I'd like the landing page to load. That is, if the user navigates to:http://OldDomain.comhttp://OldDomain.com/http://OldDomain.com/index.htmlThen they remain on said URL. In any other case, I'd like to perform a 301 redirect. For example:http://OldDomain.com/about redirects to http://NewDomain.com/abouthttp://OldDomain.com/this-is-the-title redirects to http://NewDomain.com/this-is-the-titleUnfortunately, I can't quite seem to nail the proper regular expression to handle the initial cases for the landing page. I'm attempting to setup a form for a model that contains a select box populated from a collection in the hash.Specifically, my employee model has a hash of roles:ROLES = {1 =&gt; "Lead", 2 =&gt; "Engineer", 3 =&gt; "Intern" }And a validator:validates_presence_of :roleIdeally, I'd like to populate a select box in a form using this information. Something such as :&lt;%= form_for @employee do |f| %&gt; &lt;%= label_tag :role, "Role" %&gt; &lt;%= f.select :employee, :role, Employee::ROLES %&gt;&lt;% end %&gt;Although I can display the values in the select box, the data isn't serialized. Instead, I receive the validation message that the "Role can't be blank."My controller's create method looks like this:def create @employee = Employee.new(params[:employee]) if @employee.save redirect_to employees_path, :notice =&gt; "Successfully created a new employee." else render :action =&gt; 'new' endendUltimately, my question is how do I populate the select box using the hash in the model and properly save the value of the select box to the column on the employee model in the database? I think you may be making it more complicated than it needs to be :). I wrote up a quick jsFiddle for reference, but I'd say that you could make a couple of changes to the way you've got your markup structured that would make the transitions much cleaner:Keep the testimonials and clients in the markup rather than an array. Only use an array if you're going to be doing something like pulling the comments via ajax.Don't worry too much about the queue method or keeping track of counters. Instead, use a classname on the elements to track which ones are currently being displayed (my jsFiddle shows this).If you take a look at the sample code, you can also easily apply effects. Rather than using toggle(), you could use something like fadeToggle(). Without seeing any code, it's difficult to know the context of the question, but the key is to look for a defining attribute of the element in question.For example:Look at the ID of the handle that is used. $('.handle').attr('id');Look for any defining attributes in the classnames. $('.handle').attr('class');.For the second option, you could then split() on the classnames to examine what other values are available. Without any more context to the question, it's a little difficult to say; however, based on the URL scheme that you've provided, 'special' appears to be a category, custom post type, or some other taxonomy.If that's the case, then you can use a custom permalink setting set to: /%postname%/ and that would take care of it. window.open will open a new browser with the specified URL.window.location.href will open the URL in the window in which the code is called. Note also that window.open() is a function on the window object itself whereas window.location is an object that exposes a variety of other methods and properties.  I have a small Ruby script that I'm writing to automate the preparation of a development environment on local machines. Because I can't be certain that the rubyzip2 library is present on all of the machines, I'm having the script install it when needed.Currently, my script is doing the following:begin require 'zip/zip'rescue LoadError system("gem install rubyzip2")endOnce the gem has been installed, the script continues execution; however, the gem hasn't been loaded so all code requiring rubyzip2 halts the execution.How do I load the gem into memory so that the script can continue running after installation?  When using either of those API functions, you're relinquishing control to WordPress for writing them out to the browser.This is the correct way to do it, though.Additionally, if you look at the source code for the function, you'll notice that there are no calls to apply_filters so you're unable to provide any kind of customization to what WordPress does when writing these out. I currently have a website setup in the following way:example.com is the root domainThe .htaccess file redirects all requests to the root URL to blog.example.comThis is because the blog subdomain is a mirror of the main domain and is what will be used moving forward.The problem is that there's a second domain: product.com that is pointing to example.com/product.As the .htaccess file is configured, all incoming requests are mapped to blog.example.com.This means that going to product.com will result in blog.example.com/product in which the ideal scenario is to have example.com/product and all other incoming requests be redirected to blog.example.com.A copy of my .htaccess file is below:# Block access to the root siteRewriteCond %{HTTP_HOST} ^(example\.com)$ [NC]# Whitelist specific areas of the root site# e.g category slugs or page slugs you want to remain viewableRewriteCond %{REQUEST_URI} !/blog.* [NC]RewriteCond %{THE_REQUEST} !/blog.* [NC]# Set like-to-like redirect URL for anything not whitelistedRewriteRule (.*) http://blog\.example\.com/$1 [R=301,L]RewriteEngine OnRewriteBase /RewriteRule ^index\.php$ - [L]# add a trailing slash to /wp-adminRewriteRule ^wp-admin$ wp-admin/ [R=301,L]RewriteCond %{REQUEST_FILENAME} -f [OR]RewriteCond %{REQUEST_FILENAME} -dRewriteRule ^ - [L]RewriteRule ^(wp-(content|admin|includes).*) $1 [L]RewriteRule ^(.*\.php)$ $1 [L]RewriteRule . index.php [L]How can I construct my rules in the following way:product.com redirects to example.com/productexample.com redirects to blog.example.com                    